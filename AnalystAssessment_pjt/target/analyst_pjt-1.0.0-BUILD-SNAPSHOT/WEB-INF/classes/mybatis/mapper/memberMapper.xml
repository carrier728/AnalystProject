<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">

	<!-- 회원가입 저장 -->
	<insert id="insert" parameterType="MemberVO">
		insert into member
		(m_idx, m_userId, m_userPw, m_userName, m_email, m_lev, m_regDate, m_joinKey, m_pwKey, m_temp)
		values
		(member_idx_seq.nextval, #{m_userId}, #{m_userPw}, #{m_userName}, #{m_email}, #{m_lev}, SYSDATE, '', '', '')
	</insert>

	<!-- 레벨 변경(인증 1, 미인증 0, 탈퇴 99, 최고 관리자 10 ... -->
	<update id="updateLevel" parameterType="java.util.HashMap">
		update member set m_lev=#{m_lev} where m_userid=#{m_userId}
	</update>

	<!-- 아이디 중복 확인 -->
	<select id="userIdCount" parameterType="java.lang.String" resultType="int">
		select count(*) from member where m_userid=#{m_userId}
	</select>
	
	<!-- 이메일 중복 확인 -->
	<select id="emailCount" parameterType="java.lang.String" resultType="int">
		select count(*) from member where m_email = #{m_email}
	</select>
	
	<!-- 비밀번호 체크 -->
	<select id="passwordCheck" parameterType="String" resultType="String">
		select m_userPw from member where m_userid=#{m_userId}	
	</select>
	
	<!-- ID로 가져오기 -->
	<select id="selectById" parameterType="String" resultType="MemberVO">
		select * from member where m_userId=#{m_userId}
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="findId" parameterType="String" resultType="MemberVO" >
		select * from member where m_email=#{m_email}
	</select>
	
	<!-- 비번 찾기 -->
	<select id="findPw" parameterType="String" resultType="String">
		select m_userPw from member where m_userId=#{m_userId}
	</select>
	
	<!-- 회원정보 수정 -->
	<update id="update" parameterType="java.util.HashMap">
		update member set m_userName = #{m_userName}, m_email=#{m_email} where m_userId = #{m_userId}
	</update>
	
	<!-- 비밀번호 변경 -->
	<update id="updatePw" parameterType="java.util.HashMap">
		update member set m_userPw = #{m_userPw} where m_userId = #{m_userId}
	</update>
	
	<!-- 회원가입 이메일 인증 =>  키 값 저장 -->
	<update id="updateKey" parameterType="java.util.HashMap">
		update member set m_joinKey=#{m_joinKey} where m_email=#{m_email}
	</update>

	<!-- 회원가입 이메일 인증 => 키 값 가져오기 -->
	<select id="getKey" parameterType="String" resultType="String">
		select m_joinKey from member where m_email=#{m_email}
	</select>
	
	<!-- 비번 찾기 > 키 값 저장 -->
	<update id="insertPwKey" parameterType="java.util.HashMap">
		update member set m_pwKey=#{m_pwKey} where m_email=#{m_email}
	</update>
	
	<!-- 비번 찾기 > 키 초기화 -->
	<update id="insertPwKey2" parameterType="java.util.HashMap">
		update member set m_pwKey=#{m_pwKey} where m_userId=#{m_userId}
	</update>
	
	<!-- 회원 1페이지 가져오기 -->
	<select id="selectMemberAll" parameterType="HashMap" resultType="MemberVO">
		select
		R.*
		from
		(select
		rownum rnum, Q.*
		from
		(select * from member order by m_idx desc) Q
		where
				<![CDATA[
				rownum <= #{endNo}) R
				]]>
		where
			<![CDATA[
			rnum >= #{startNo}
			]]>
	</select>	
	
	<!-- 회원 개수 얻기 -->
	<select id="selectCount" resultType="int">
		select count(*) from member
	</select>
	
	<!-- 회원탈퇴 -->
</mapper>